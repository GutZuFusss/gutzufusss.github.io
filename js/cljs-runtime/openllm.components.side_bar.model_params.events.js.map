{"version":3,"sources":["openllm/components/side_bar/model_params/events.cljs"],"mappings":";AAKA,yDAAA,8LAAA,vPAACA,0UAECC,8CACD,cAAAC,HAAKG;AAAL,AAAA,IAAAF,aAAAD;QAAA,AAAAE,4CAAAD,WAAA,IAAA,/DAASG;gBAAT,AAAAF,4CAAAD,WAAA,IAAA,vEAAWI;YAAX,AAAAH,4CAAAD,WAAA,IAAA,nEAAqBK;AAArB,AACE,IAAMC,YAAU,+GAAA,6FAAA,5MAACC,+CAAOC,mJAAwBJ;IAC1CK,eAAa,iBAAAC,cAAOE;IAAPD,cAASL;AAAT,AAAA,oBAAA,CAAAI,4CAAAA,mEAAAC,eAAAD,+CAAAC,vFACEE,8DAAAA;AAAS,GAAI,AAACA,yBAASR;AAAOA;;AAAM,OAACS,wBAAcT;;;AADrD,oBAAA,CAAAK,4CAAAA,+DAAAC,eAAAD,2CAAAC,/EAEEI,0DAAAA;AAAK,GAAI,AAACA,qBAAKV;AAAOA;;AAAM,OAACW,qBAAWX;;;AAF1C,oBAAA,CAAAK,4CAAAA,iEAAAC,eAAAD,6CAAAC,nFAGEM,4DAAAA;AAAO,GAAI,AAACA,uBAAOZ;AAAOA;;AAAM,OAACa,uBAAab;;;AAC9CA;;;;;AALrB,AAME,OAACc,mBAASjB,GAAG,AAACkB,2IAAWhB,gBAAWK","names":["re_frame.core.reg_event_db","openllm.events/check-spec-interceptor","p__28654","vec__28656","cljs.core.nth","db","_","parameter","value","type-pred","cljs.core.get_in","openllm.components.side-bar.model-params.db/parameter-meta-data","parsed-value","pred__28667","expr__28668","cljs.core/=","cljs.core/boolean?","cljs.core/parse-boolean","cljs.core/int?","cljs.core/parse-long","cljs.core/float?","cljs.core/parse-double","cljs.core/assoc-in","openllm.components.side_bar.model_params.db.key_seq"],"sourcesContent":["(ns openllm.components.side-bar.model-params.events\n  (:require [openllm.components.side-bar.model-params.db :as db]\n            [re-frame.core :refer [reg-event-db]]\n            [openllm.events :refer [check-spec-interceptor]]))\n\n(reg-event-db\n ::set-model-config-parameter\n [check-spec-interceptor]\n (fn [db [_ parameter value]]\n   (let [type-pred (get-in db/parameter-meta-data [parameter :type-pred])\n         parsed-value (condp = type-pred ;; this can probably be rewritten smarter... TODO i guess...\n                        boolean? (if (boolean? value) value (parse-boolean value))\n                        int? (if (int? value) value (parse-long value))\n                        float? (if (float? value) value (parse-double value))\n                        value)] ;; best effort probably was not enough ;_;\n     (assoc-in db (db/key-seq parameter) parsed-value))))\n"]}