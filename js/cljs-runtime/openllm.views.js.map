{"version":3,"sources":["openllm/views.cljs"],"mappings":";AAgBA;;;;;4BAAA,5BAAMA,gEAIHC;AAJH,AAKE,IAAAC,WAAMD;IAANC,eAAA,EAAA,CAAAA,oBAAAC,oBAAA,AAAAD,aAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,0FACeG;;;KADf;AAAA,0FAESC;;;;AAFT,MAAA,KAAAF,MAAA,CAAA,mEAAAF;;;;AAIF;;;;;;;;0BAAA,1BAAMK;AAAN,AAQE,IAAMN,YAAU,sDAAA,mFAAA,zIAACO;AAAjB,AACE;AAAA,AAAA,0FAAA,iDAAA,oIAAA,mFAAA,mDAAA,2CAAA,wDAAA,6DAAA,mFAAA,mDAAA,2CAAA,wDAAA,wCAAA,mFAAA,sDAAA,2CAAA,wDAAA,yDAAA,6DAAA,YAAA,mFAAA,mDAAA,2CAAA,wDAAA,yCAAA,6GAAA,AAAAC,2DAAA,h5CAEIC,2zCAKIV,0CAAaC,8HAChBU","names":["openllm.views/tab-content","screen-id","G__29221","cljs.core/Keyword","js/Error","openllm.components.playground.views/playground-tab-contents","openllm.components.chat.views/chat-tab-contents","openllm.views/dashboard","re_frame.core.subscribe","cljs.core/deref","openllm.components.nav-bar.views/nav-bar","openllm.components.side-bar.views/side-bar"],"sourcesContent":["(ns openllm.views\n  \"This is the root views namespace, while the first DOM/hiccup is created in\n   the `openllm.app` namespace, this namespace is the first to be pure and\n   only create hiccup/DOM, derived from data :)\n   The `openllm.app` namespace dealt with the initialisation of the `app-db`,\n   created the root DOM/hiccup node and handeled the material-ui theming.\n\n   From this point onward all the views are pure and only depend on the `app-db`,\n   which is queried by subscriptions and the single source of truth for the\n   entire application.\"\n  (:require [re-frame.core :as rf]\n            [openllm.components.nav-bar.views :as nav-bar-views]\n            [openllm.components.side-bar.views :as side-bar-views]\n            [openllm.components.playground.views :as playground-views]\n            [openllm.components.chat.views :as chat-views]))\n\n(defn tab-content\n  \"The content of the currently active tab. Essentially, this is the\n   main router of the app, deciding what content should be rendered\n   based on the current screen-id.\"\n  [screen-id]\n  (case screen-id\n    :playground [playground-views/playground-tab-contents]\n    :chat [chat-views/chat-tab-contents]))\n\n(defn dashboard\n  \"The main dashboard component, which is rendered into the DOM. Called\n   directly by the `app` function residing inside the `app` namespace,\n   which is the main component and rendered by the root rendering function\n   of this application. Called is putting it mildly, as this function is\n   basically wrapped by the `app` function, thus this component contains\n   everything that is rendered into the DOM as it's children.\"\n  []\n  (let [screen-id (rf/subscribe [:screen-id])]\n    (fn []\n      [:<>\n       [nav-bar-views/nav-bar]\n       [:div {:class \"h-[calc(100vh-3rem)] flex bg-white overflow-hidden\"}\n        [:div {:class \"flex flex-col flex-1 w-screen\"}\n         [:main {:class \"flex-1 relative z-0 overflow-hidden focus:outline-none\" :tabIndex \"0\"}\n          [:div {:class \"mt-2 pr-0.5 pl-4 w-full h-full\"}\n           [tab-content @screen-id]]]]\n        [side-bar-views/side-bar]]])))\n"]}