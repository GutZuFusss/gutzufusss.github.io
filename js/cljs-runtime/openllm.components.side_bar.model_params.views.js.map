{"version":3,"sources":["openllm/components/side_bar/model_params/views.cljs"],"mappings":"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","names":["openllm.components.side-bar.model-params.views/parameter-slider","id","value","p1__31135#","min-max","cljs.core.get_in","openllm.components.side-bar.model-params.db/parameter-meta-data","num-type?","cljs.core._EQ_","cljs.core/int?","on-change","re-frame.core/dispatch","cljs.core/first","cljs.core/second","openllm.components.side-bar.model-params.views/parameter-small-input","p1__31136#","reagent-mui.material.input/input","openllm.components.side-bar.model-params.views/parameter-checkbox","cljs.core/not","p1__31137#","openllm.components.side-bar.model-params.views/parameter-number","cljs.core/parse-long","p__31138","vec__31139","cljs.core.nth","map__31142","cljs.core/--destructure-map","cljs.core.get","openllm.components.side-bar.model-params.views/parameter-list-entry","name","display-type","openllm.components.side-bar.model-params.views/parameter-list","model-config","re_frame.core.subscribe","basic-params","cljs.core/deref","cljs.core/filterv","p__31143","vec__31144","_","advanced-params","p__31147","vec__31148","cljs.core.into","cljs.core.map","reagent-mui.material.accordion/accordion","reagent-mui.material.accordion-summary/accordion-summary","reagent.core.as_element","reagent-mui.icons.expand-more/expand-more","reagent-mui.material.typography/typography","reagent-mui.material.accordion-details/accordion-details"],"sourcesContent":["(ns openllm.components.side-bar.model-params.views\n  (:require [openllm.components.side-bar.model-params.db :as db]\n            [openllm.components.side-bar.model-params.subs :as subs] \n            [openllm.components.side-bar.model-params.events :as events]\n            [reagent-mui.material.input :refer [input]]\n            [reagent-mui.material.accordion :refer [accordion]]\n            [reagent-mui.material.accordion-details :refer [accordion-details]]\n            [reagent-mui.material.accordion-summary :refer [accordion-summary]]\n            [reagent-mui.material.typography :refer [typography]]\n            [reagent-mui.icons.expand-more :refer [expand-more]]\n            [clojure.string :as str]\n            [re-frame.core :as rf]\n            [reagent.core :as r]))\n\n(defn parameter-slider\n  \"Renders a slider with an input field next to it. The num-type logic needs to be\n   revamped big time xx\"\n  [id value]\n  (let [min-max (get-in db/parameter-meta-data [id :val-constraint])\n        num-type? (= int? (get-in db/parameter-meta-data [id :type-pred]))\n        on-change #(rf/dispatch [::events/set-model-config-parameter id (.. % -target -value)])]\n    [:div {:class \"flex flex-row items-center w-full\"}\n     [:input {:type \"range\"\n              :min (first min-max)\n              :max (second min-max)\n              :step (if num-type? 1 0.01)\n              :value value\n              :class \"w-full mt-2 mb-1\"\n              :on-change on-change}]]))\n\n(defn parameter-small-input\n  \"Renders a small input field, used in combination with the sliders. The num-type logic\n   needs to be revamped big time xx\"\n  [id value]\n  (let [on-change #(rf/dispatch [::events/set-model-config-parameter id (.. % -target -value)])\n        num-type? (= int? (get-in db/parameter-meta-data [id :type-pred]))]\n     [input {:type \"number\"\n             :class \"w-10 text-center border\"\n             :input-props {:style {:text-align \"center\"\n                                   :height \"12px\"}}\n             :step (if num-type? 1 0.01)\n             :value value\n             :on-change on-change}]))\n\n(defn parameter-checkbox\n  \"Renders a checkbox.\"\n  [id value]\n  [:input {:type \"checkbox\"\n           :class \"ml-6 mt-1\"\n           :checked value\n           :on-change #(rf/dispatch [::events/set-model-config-parameter id (not value)])}])\n\n(defn parameter-number\n  \"Renders a number input field.\"\n  [id value]\n  [input {:type \"number\"\n          :class \"w-16 border\"\n          :value value\n          :on-change #(rf/dispatch [::events/set-model-config-parameter id (parse-long (.. % -target -value))])}])\n\n(defn parameter-list-entry\n  \"Renders a single parameter in the sidebar's parameter list. Used as a mapping function\n   on the collection of all parameters.\"\n  [[id {:keys [value name]}]]\n  (let [display-type (get-in db/parameter-meta-data [id :display-type])]\n    [:div {:class \"flex flex-col px-2 py-1\"}\n     [:label {:class \"flex w-full text-xs justify-between\"}\n      name\n      (when (= :slider display-type)\n        [parameter-small-input id value])\n      (when (= :binary display-type)\n        [parameter-checkbox id value])\n      (when (= :field display-type)\n        [parameter-number id value])]\n     (when (= :slider display-type)\n       [:div {:class \"mt-0.5\"}\n        [parameter-slider id value]])\n     [:hr {:class \"mt-1.5 border-1 border-gray-100\"}]]))\n\n(defn parameter-list\n  \"Renders the parameters in the sidebar. The parameters are retrieved from the\n   `human-readable-config` subscription.\"\n  []\n  (let [model-config (rf/subscribe [::subs/human-readable-config])]\n    (fn []\n      (let [basic-params (filterv (fn [[id _]] (not (get-in db/parameter-meta-data [id :advanced-opt]))) @model-config)\n            advanced-params (filterv (fn [[id _]] (get-in db/parameter-meta-data [id :advanced-opt])) @model-config)]\n        [:<>\n         (into [:<>] (map parameter-list-entry basic-params))\n         [:div {:class \"mt-2 -mx-1.75\"}\n          [accordion {:square true\n                      :class \"w-full\"}\n           [accordion-summary {:expand-icon (r/as-element [expand-more])}\n            [typography \"Advanced\"]]\n           [accordion-details {:class \"mt-2 -mx-3\"}\n            (into [:<>] (map parameter-list-entry advanced-params))]]]]))))\n"]}