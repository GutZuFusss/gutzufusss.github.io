{"version":3,"sources":["openllm/api/events.cljs"],"mappings":";AAIA,kCAAA,lCAAKA;AAEL,yDAAA,qGAAA,9JAACC,+LAGA,aAAAC,FAAKU;AAAL,AAAA,IAAAT,aAAAD;IAAAE,aAAA,AAAAC,cAAAF;IAAAG,eAAA,AAAAC,gBAAAH;IAAAA,iBAAA,AAAAI,eAAAJ;YAAAE,RAAQM;IAARN,mBAAA,AAAAC,gBAAAH;IAAAA,iBAAA,AAAAI,eAAAJ;aAAAE,TAAUO;IAAVP,mBAAA,AAAAC,gBAAAH;IAAAA,iBAAA,AAAAI,eAAAJ;iBAAAE,bAAiBQ;IAAjBL,aAAAL;IAAAK,iBAAA,AAAAC,4BAAAD;iBAAA,AAAAE,4CAAAF,eAAA,xEAAsCM;iBAAtC,AAAAJ,4CAAAF,eAAA,xEAAiDO;AAAjD,AAAA,kDAAA,iEAAA,2CAAA,uDAAA,oDAAA,6GAAA,wDAAA,2CAAA,+DAAA,oFAAA,0FAAA,iOAAA,4EAAA,vrBAEqB,iCAAA,hCAAKhB,oNACOa,wEACIC,6EACJ,AAACG,2GACD,+BAAA,2CAAA,8DAAA,xIAACC,uNACDH,2EACAC;;AAElC,yDAAA,uGAAA,hKAACf,iMAGA,aAAAkB,FAAKP;AAAL,AAAA,IAAAQ,aAAAD;IAAAE,aAAA,AAAAhB,cAAAe;IAAAE,eAAA,AAAAf,gBAAAc;IAAAA,iBAAA,AAAAb,eAAAa;YAAAC,RAAQV;IAARW,aAAAF;IAAAE,iBAAA,AAAAb,4BAAAa;iBAAA,AAAAZ,4CAAAY,eAAA,xEAAoBR;iBAApB,AAAAJ,4CAAAY,eAAA,xEAA+BP;AAA/B,AAAA,kDAAA,iEAAA,2CAAA,uDAAA,oDAAA,6GAAA,0FAAA,iOAAA,4EAAA,jcAEqB,iCAAA,hCAAKhB,mHACO,AAACiB,2GACD,+BAAA,2CAAA,8DAAA,xIAACC,uNACDH,2EACAC","names":["openllm.api.events/api-base-url","re_frame.core.reg_event_fx","p__38079","vec__38080","seq__38081","cljs.core/seq","first__38082","cljs.core/first","cljs.core/next","map__38083","cljs.core/--destructure-map","cljs.core.get","_","prompt","llm-config","on-success","on-failure","ajax.core/json-request-format","ajax.core/json-response-format","p__38084","vec__38085","seq__38086","first__38087","map__38088"],"sourcesContent":["(ns openllm.api.events\r\n  (:require [ajax.core :as ajax]\r\n            [re-frame.core :refer [reg-event-fx]]))\r\n\r\n(def api-base-url \"http://localhost:3000\")\r\n\r\n(reg-event-fx\r\n ::v1-generate\r\n []\r\n (fn [_ [_ prompt llm-config & {:keys [on-success on-failure]}]]\r\n   {:http-xhrio {:method :post\r\n                 :uri (str api-base-url \"/v1/generate\")\r\n                 :params {:prompt prompt\r\n                          :llm_config llm-config}\r\n                 :format          (ajax/json-request-format)\r\n                 :response-format (ajax/json-response-format {:keywords? true})\r\n                 :on-success      on-success\r\n                 :on-failure      on-failure}}))\r\n\r\n(reg-event-fx\r\n ::v1-metadata\r\n []\r\n (fn [_ [_ & {:keys [on-success on-failure]}]]\r\n   {:http-xhrio {:method :post\r\n                 :uri (str api-base-url \"/v1/metadata\")\r\n                 :format          (ajax/json-request-format)\r\n                 :response-format (ajax/json-response-format {:keywords? true})\r\n                 :on-success      on-success\r\n                 :on-failure      on-failure}}))\r\n"]}