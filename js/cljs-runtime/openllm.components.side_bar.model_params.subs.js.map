{"version":3,"sources":["openllm/components/side_bar/model_params/subs.cljs"],"mappings":";AAIA;;;gFAAA,wCAAA,uDAAA,gGAAA,yEAAA,2EAAA,uEAAA,+EAAA,sDAAA,0EAAA,8DAAA,6DAAA,+DAAA,gEAAA,iEAAA,wEAAA,kFAAA,iEAAA,wEAAA,kEAAA,4EAAA,QAAA,6BAAA,iBAAA,wBAAA,gBAAA,oBAAA,QAAA,qBAAA,kBAAA,eAAA,YAAA,YAAA,aAAA,iBAAA,qBAAA,iBAAA,iBAAA,cAAA,htDAAKA;AAsBL,2DAAA,gNAAA,gDAAA,mFAAA,9YAACC,+hBAGA,WAAKC,gBAAgBC;AAArB,AACED;;AAEH,2DAAA,iOAAA,gDAAA,mFAAA,/ZAACD,qkBAGA,WAAKG,aAAaD;AAAlB,AACE,OAACE,cAAI,AAACC,4CAAI,WAAAC;AAAA,AAAA,IAAAC,aAAAD;QAAA,AAAAE,4CAAAD,WAAA,IAAA,/DAAME;QAAN,AAAAD,4CAAAD,WAAA,IAAA,/DAAQG;AAAR,AAAA,4FAAA,2CAAA,iXAAA,9ZACGD,kGAAS,CAACV,8GAAAA,iHAAAA,LAA6BU,6FAAAA,0DAC7BC;GACbP","names":["openllm.components.side-bar.model-params.subs/parameter-id->human-readable","re_frame.core.reg_sub","model-params-db","_","model-config","cljs.core/vec","cljs.core.map","p__28589","vec__28590","cljs.core.nth","k","v"],"sourcesContent":["(ns openllm.components.side-bar.model-params.subs\n  (:require [openllm.components.side-bar.subs :as side-bar-subs]\n            [re-frame.core :refer [reg-sub]]))\n\n(def parameter-id->human-readable\n  \"Maps paramter ids to human readable names.\"\n  {:temperature \"Temperature\"\n   :top_k \"Top K\"\n   :top_p \"Top P\"\n   :typical_p \"Typical P\"\n   :epsilon_cutoff \"Epsilon Cutoff\"\n   :eta_cutoff \"Eta Cutoff\"\n   :diversity_penalty \"Diversity Penalty\"\n   :repetition_penalty \"Repetition Penalty\"\n   :encoder_repetition_penalty \"Encoder Repetition Penalty\"\n   :length_penalty \"Length Penalty\"\n   :max_new_tokens \"Maximum New Tokens\"\n   :min_length \"Minimum Length\"\n   :min_new_tokens \"Minimum New Tokens\"\n   :early_stopping \"Early Stopping\"\n   :max_time \"Maximum Time\"\n   :num_beams \"Number of Beams\"\n   :num_beam_groups \"Number of Beam Groups\"\n   :penalty_alpha \"Penalty Alpha\"\n   :use_cache \"Use Cache\"})\n\n(reg-sub\n ::model-config\n :<- [::side-bar-subs/model-params-db]\n (fn [model-params-db _]\n   model-params-db))\n\n(reg-sub\n ::human-readable-config\n :<- [::model-config]\n (fn [model-config _]\n   (vec (map (fn [[k v]]\n               [k {:name (parameter-id->human-readable k)\n                   :value v}])\n             model-config))))\n"]}