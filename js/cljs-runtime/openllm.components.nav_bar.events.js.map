{"version":3,"sources":["openllm/components/nav_bar/events.cljs"],"mappings":";AAQA;;;yDAAA,zDAAOA,0HAEJC,UAAUC;AAFb,AAGE,IAAMC,OAAK,KAAAC,KAAA,UAAA,UAAA,nBAAeF;IACpBG,OAAK,uBAAA,vBAACC;AADZ,AAEE,CAAM,AAAQD,YAAM,AAACE,2BAA8BJ;;AACnD,CAAM,AAAYE,gBAAMJ;;AACxB,eAAA,dAAM,AAAUI;;AAChB,OAAQA;;AAEZ;;;qEAAA,rEAAOG,kJAEJC,OAAOC;AAFV,AAGE,QAAA,+DAAA,SAAA,jBAAgBD,0EAEEC;;AAMpB,yDAAA,zDAACC,iNAEA,WAAKC,KAAKC;AAAV,AAAA,kDAAA,uEAAA,KAAA,kDAEO,iBAAMC,gBAAc,oDAAA,mFAAA,gDAAA,vLAACC,+CAAOH;AAA5B,AACE,IAAAI,cAAOE;IAAPD,cAASH;AAAT,AAAA,oBAAA,CAAAE,4CAAAA,0CAAA,gEAAAC,eAAAD,sBAAA,gEAAAC;AAEE,IAAME,cAAY,oDAAA,mFAAA,gDAAA,vLAACJ,+CAAOH;IACpBQ,iBAAe,oDAAA,mFAAA,gDAAA,vLAACL,+CAAOH;AAD7B,AAEE,8DAAA,vDAACZ,+EACgB,AAACQ,mEAAiCW,YACAC;;AANvD,oBAAA,CAAAJ,4CAAAA,0CAAA,qDAAAC,eAAAD,sBAAA,qDAAAC;AAQE,IAAMI,eAAa,oDAAA,mFAAA,gDAAA,vLAACN,+CAAOH;AAA3B,AACE,8DAAA,vDAACZ,yEACgB,AAACsB,qCAA0BD;;AAE9C,0EAAA,yGAAA,5KAACE","names":["openllm.components.nav-bar.events/start-download!","file-name","content","blob","js/Blob","link","js/document.createElement","js/window.URL.createObjectURL","openllm.components.nav-bar.events/build-playground-export-contents","prompt","response","re_frame.core.reg_event_fx","cofx","_","active-screen","cljs.core.get_in","pred__39174","expr__39175","cljs.core/=","input-value","response-value","chat-history","openllm.util/chat-history->string","openllm.api.log4cljs.core.log"],"sourcesContent":["(ns openllm.components.nav-bar.events\n  (:require [openllm.util :as util]\n            [openllm.api.log4cljs.core :refer [log]]\n            [re-frame.core :refer [reg-event-fx]]))\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;              Functions             ;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(defn- start-download!\n  \"Starts the download of a file.\"\n  [file-name content]\n  (let [blob (js/Blob. #js [content] #js {:type \"text/plain\"})\n        link (js/document.createElement \"a\")]\n    (set! (.-href link) (js/window.URL.createObjectURL blob))\n    (set! (.-download link) file-name)\n    (set! (.-target link) \"_blank\")\n    (.click link)))\n\n(defn- build-playground-export-contents\n  \"Returns the contents of the playground export file.\"\n  [prompt response]\n  (str \"Prompt: \" prompt\n       \"\\n\\n\\n\"\n       \"Response: \" response))\n\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;               Events               ;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(reg-event-fx\n ::export-button-clicked\n (fn [cofx _]\n   {:dispatch-sync true\n    :fx (let [active-screen (get-in cofx [:db :screen-id])]\n          (condp = active-screen\n            :playground\n            (let [input-value (get-in cofx [:db :playground-input-value])\n                  response-value (get-in cofx [:db :playground-last-response])]\n              (start-download! \"export-playground.txt\"\n                               (build-playground-export-contents input-value\n                                                                 response-value)))\n            :chat\n            (let [chat-history (get-in cofx [:db :chat-history])]\n              (start-download! \"export-chat.txt\"\n                               (util/chat-history->string chat-history)))\n            ;default\n            (log :error \"Export button clicked in unknown screen.\")))}))\n"]}