{"version":3,"sources":["openllm/components/playground/db.cljs"],"mappings":";AAOA,AAAA;;;;;;2CAAA,mDAAAA,9FAAMM;AAAN,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,8EAAAF;;;AAAA,AAAA,CAAA,gFAAA,hFAAME,2FAKDI;AALL,AAME,oDAAA,mFAAA,sEAAA,tMAACC,qRAAqCD;;;AANxC,CAAA,mEAAA,nEAAMJ;;AAAN;AAAA,CAAA,6DAAA,WAAAC,xEAAMD;AAAN,AAAA,IAAAE,qBAAA;AAAA,AAAA,OAAAA,wDAAA,AAAAC,cAAAF;;;AAAA,AAYA,AAAAK,yBAAA,AAAA,yJAAA,AAAA,iFAAgCC;AAChC,AAAAD,yBAAA,AAAA,4JAAA,AAAA,iFAAkCC;AAClC,AAAAD,yBAAA,AAAA,qJAAA,AAAA,kFAA8BE;AAE9B,AAAAF,yBAAA,AAAA,qIAAA,AAAA,osBAAuB,AAAAG,8BAAA,wCAAA,yDAAA,wDAAA,kDAAA,iEAAA,8DAAA,6DAAA,8DAAA,mDAAA,4DAAA,+DAAA,gEAAA,qDAAA,AAAA,qiBAAA,AAAA,KAAA,KAAA,mFAAA,WAAAC;AAAA,AAAA,OAAAC,qBAAAD;GAAA,WAAAA;AAAA,AAAA,OAAAE,0BAAAF,SAAA;GAAA,WAAAA;AAAA,AAAA,OAAAE,0BAAAF,SAAA;GAAA,WAAAA;AAAA,AAAA,OAAAE,0BAAAF,SAAA;WAAA,WAAAA;AAAA,AAAA,SAAA,AAAAC,qBAAAD,eAAA,EAAA,AAAAE,0BAAAF,SAAA,+FAAA,EAAA,AAAAE,0BAAAF,SAAA,kGAAA,AAAAE,0BAAAF,SAAA;GAAA,AAAA,iCAAA,AAAA,qiBAAA,AAAA,KAAA,AAAA,qWAAA,AAAA,iCAAA,AAAA,40DAAA,AAAA;AAIvB;;;8CAAA,9CAAMG;AAAN,AAAA,kDAAA,yFAAA,GAAA,4FAAA,GAAA,qFAAA;;AAWA","names":["var_args","args__5775__auto__","len__5769__auto__","i__5770__auto__","argseq__5776__auto__","cljs.core/IndexedSeq","openllm.components.playground.db/key-seq","seq38674","self__5755__auto__","cljs.core/seq","more-keys","cljs.core.into","cljs.spec.alpha/def-impl","cljs.core/string?","cljs.core/boolean?","cljs.spec.alpha/map-spec-impl","G__38683","cljs.core/map?","cljs.core/contains?","openllm.components.playground.db/initial-db"],"sourcesContent":["(ns openllm.components.playground.db\n  \"The branch of the `app-db` that saves data related to the playground view.\n   This includes the input box, the response box and the response modal.\n   The path to this branch can be expressed as:\n   *root -> components -> playground*\"\n  (:require [cljs.spec.alpha :as s]))\n\n(defn key-seq\n  \"Returns the key sequence to access the playground-db This is useful for\n   `assoc-in` and `get-in`. The `more-keys` argument is optional and can be\n   used to access a sub-key of the playground-db\n   Returns the key sequence to access the playground-db\"\n  [& more-keys]\n  (into [:components-db :playground-db] more-keys))\n\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;                Spec                ;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(s/def ::playground-input-value string?)   ;; string the user entered into the input box\n(s/def ::playground-last-response string?) ;; the last response from the server\n(s/def ::response-modal-open? boolean?)    ;; whether the response modal is open\n\n(s/def ::playground-db (s/keys :req-un [::playground-input-value ;; the spec for the playground-db\n                                        ::playground-last-response\n                                        ::response-modal-open?]))\n\n(defn initial-db\n  \"Initial values for this branch of the app-db.\"\n  []\n  {:playground-input-value \"\"\n   :playground-last-response \"\"\n   :response-modal-open? false})\n\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;           Rich Comments            ;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(comment\n  ;; check if initial-db is valid\n  (s/valid? ::playground-db (initial-db)))\n"]}